'use client'

import { useState, useEffect } from 'react'
import Layout from '@/components/Layout/Layout'

import EquipmentCard from '@/components/Equipment/EquipmentCard'
import { motion, AnimatePresence } from 'framer-motion' // ‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
import { 
  MagnifyingGlassIcon,
  AdjustmentsHorizontalIcon,
  SparklesIcon,
  TrophyIcon,
  ClockIcon,
  CheckCircleIcon,
  HeartIcon,
  ChartBarIcon,
  FireIcon,
  BoltIcon,
  ShieldCheckIcon,
  StarIcon
} from '@heroicons/react/24/outline'

// Mock data with modern categorization
const mockEquipment = [
  {
    equipment_id: 1,
    equipment_code: 'BP001',
    equipment_name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï',
    description: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡πÅ‡∏ö‡∏ö‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏• ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÉ‡∏ô‡∏ï‡∏±‡∏ß',
    brand_model: 'Omron HEM-7120',
    status: 'available' as const,
    location: '‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå A - RSU',
    max_borrow_days: 7,
    category: '‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ä‡∏µ‡∏û',
    rating: 4.8,
    borrowCount: 45
  },
  {
    equipment_id: 2,
    equipment_code: 'BG001', 
    equipment_name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î',
    description: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ú‡πà‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö 50 ‡∏ä‡∏¥‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πá‡∏°‡πÄ‡∏à‡∏≤‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏î',
    brand_model: 'Accu-Chek Active',
    status: 'in_use' as const,
    location: '‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå B - RSU',
    max_borrow_days: 5,
    category: '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå',
    rating: 4.6,
    borrowCount: 32
  },
  {
    equipment_id: 3,
    equipment_code: 'TH001',
    equipment_name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥',
    description: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏ó‡∏≤‡∏á‡∏´‡∏π ‡πÅ‡∏ö‡∏ö‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏• ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏™‡∏π‡∏á',
    brand_model: 'Braun ThermoScan 7',
    status: 'available' as const,
    location: '‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå B - RSU',
    max_borrow_days: 3,
    category: '‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ä‡∏µ‡∏û',
    rating: 4.9,
    borrowCount: 67
  }
]

const modernCategories = [
  { 
    name: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', 
    key: 'all', 
    icon: 'üè•', 
    gradient: 'from-medical-400 to-medical-600',
    bgGradient: 'from-medical-50 to-medical-100'
  },
  { 
    name: '‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ä‡∏µ‡∏û', 
    key: '‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ä‡∏µ‡∏û', 
    icon: 'üíó', 
    gradient: 'from-vibrant-pink to-error-500',
    bgGradient: 'from-error-50 to-vibrant-pink/10'
  },
  { 
    name: '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', 
    key: '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', 
    icon: 'üî¨', 
    gradient: 'from-vibrant-blue to-vibrant-cyan',
    bgGradient: 'from-info-50 to-vibrant-cyan/10'
  },
  { 
    name: '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢', 
    key: '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢', 
    icon: 'ü©∫', 
    gradient: 'from-medical-400 to-success-500',
    bgGradient: 'from-success-50 to-medical-100'
  }
]

const modernStats = [
  { 
    label: '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', 
    value: '3', 
    icon: CheckCircleIcon, 
    gradient: 'from-success-400 to-medical-500',
    bgGradient: 'from-success-50 to-medical-100',
    iconBg: 'bg-gradient-to-r from-success-400 to-medical-500'
  },
  { 
    label: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', 
    value: '1', 
    icon: ClockIcon, 
    gradient: 'from-warning-400 to-vibrant-amber',
    bgGradient: 'from-warning-50 to-vibrant-amber/20',
    iconBg: 'bg-gradient-to-r from-warning-400 to-vibrant-amber'
  },
  { 
    label: '‡∏¢‡∏∑‡∏°‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ', 
    value: '12', 
    icon: TrophyIcon, 
    gradient: 'from-vibrant-purple to-vibrant-pink',
    bgGradient: 'from-vibrant-purple/10 to-vibrant-pink/20',
    iconBg: 'bg-gradient-to-r from-vibrant-purple to-vibrant-pink'
  }
]

export default function HomePage() {
  const [equipment, setEquipment] = useState(mockEquipment)
  const [searchTerm, setSearchTerm] = useState('')
  const [selectedCategory, setSelectedCategory] = useState('all')
  const [sortBy, setSortBy] = useState<'name' | 'rating' | 'popular'>('name')
  const [showFilters, setShowFilters] = useState(false)
  const [currentTime, setCurrentTime] = useState(new Date())

  useEffect(() => {
    const timer = setInterval(() => setCurrentTime(new Date()), 1000)
    return () => clearInterval(timer)
  }, [])

  const filteredEquipment = equipment
    .filter(item => {
      const matchesSearch = item.equipment_name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           item.equipment_code.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           item.brand_model?.toLowerCase().includes(searchTerm.toLowerCase())
      
      const matchesCategory = selectedCategory === 'all' || item.category === selectedCategory
      
      return matchesSearch && matchesCategory
    })
    .sort((a, b) => {
      switch (sortBy) {
        case 'rating':
          return (b.rating || 0) - (a.rating || 0)
        case 'popular':
          return (b.borrowCount || 0) - (a.borrowCount || 0)
        default:
          return a.equipment_name.localeCompare(b.equipment_name, 'th')
      }
    })

  const availableCount = equipment.filter(item => item.status === 'available').length
  const inUseCount = equipment.filter(item => item.status === 'in_use').length

  const handleBookEquipment = (equipment: any) => {
    console.log('Booking equipment:', equipment)
    alert(`üéâ ‡∏à‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: ${equipment.equipment_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`)
  }

  return (
    <Layout currentPage="home">
      <div className="max-w-7xl mx-auto px-4 py-6 space-y-8">
        {/* Welcome Hero Section */}
        <motion.div 
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          className="relative overflow-hidden bg-gradient-medical rounded-modern-xl p-8 text-white"
        >
          {/* Animated Background Elements */}
          <div className="absolute inset-0 opacity-20">
            <div className="absolute inset-0 bg-gradient-to-r from-white/30 to-transparent transform rotate-12 scale-150"></div>
            <motion.div 
              animate={{ 
                scale: [1, 1.2, 1],
                rotate: [0, 180, 360]
              }}
              transition={{ duration: 20, repeat: Infinity, ease: "linear" }}
              className="absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -mr-32 -mt-32"
            ></motion.div>
            <motion.div 
              animate={{ 
                y: [0, -20, 0],
                x: [0, 10, 0]
              }}
              transition={{ duration: 8, repeat: Infinity, ease: "easeInOut" }}
              className="absolute bottom-0 left-0 w-48 h-48 bg-white/10 rounded-full -ml-24 -mb-24"
            ></motion.div>
          </div>

          <div className="relative z-10">
            <div className="flex items-center justify-between mb-8">
              <div>
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.2 }}
                  className="flex items-center space-x-3 mb-3"
                >
                  <div className="flex items-center space-x-2">
                    <motion.div
                      animate={{ rotate: [0, 10, -10, 0] }}
                      transition={{ duration: 2, repeat: Infinity, ease: "easeInOut" }}
                    >
                      üëã
                    </motion.div>
                    <h2 className="text-2xl lg:text-3xl font-bold">
                      ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, ‡∏Å‡∏±‡∏ç‡∏ç‡∏≤‡∏†‡∏≤!
                    </h2>
                  </div>
                  <motion.div
                    animate={{ scale: [1, 1.2, 1] }}
                    transition={{ duration: 2, repeat: Infinity }}
                    className="w-3 h-3 bg-vibrant-amber rounded-full"
                  ></motion.div>
                </motion.div>
                
                <motion.p 
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.3 }}
                  className="text-white/90 text-sm lg:text-base flex items-center space-x-2"
                >
                  <ShieldCheckIcon className="h-4 w-4" />
                  <span>
                    {currentTime.toLocaleDateString('th-TH', { 
                      weekday: 'long', 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric' 
                    })} - RSU Medical Clinic
                  </span>
                </motion.p>
              </div>
              
              <motion.div
                initial={{ opacity: 0, scale: 0 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.4 }}
                className="hidden lg:block"
              >
                <div className="relative">
                  <motion.div
                    animate={{ 
                      rotate: [0, 360],
                      scale: [1, 1.1, 1]
                    }}
                    transition={{ duration: 10, repeat: Infinity, ease: "linear" }}
                    className="w-20 h-20 bg-white/20 backdrop-blur-md rounded-modern-xl flex items-center justify-center border border-white/30"
                  >
                    <SparklesIcon className="h-10 w-10 text-white" />
                  </motion.div>
                  <motion.div
                    animate={{ scale: [0, 1, 0] }}
                    transition={{ duration: 2, repeat: Infinity }}
                    className="absolute -top-2 -right-2 w-6 h-6 bg-vibrant-amber rounded-full flex items-center justify-center"
                  >
                    <StarIcon className="h-3 w-3 text-white" />
                  </motion.div>
                </div>
              </motion.div>
            </div>

            {/* Quick Stats */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 lg:gap-6">
              {modernStats.map((stat, index) => (
                <motion.div
                  key={stat.label}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.5 + index * 0.1 }}
                  whileHover={{ scale: 1.05, y: -2 }}
                  className="bg-white/15 backdrop-blur-md rounded-modern-lg p-6 border border-white/20 hover:bg-white/25 transition-all duration-300 cursor-pointer"
                >
                  <div className="flex items-center space-x-4">
                    <motion.div 
                      whileHover={{ rotate: 360 }}
                      transition={{ duration: 0.6 }}
                      className={`w-14 h-14 ${stat.iconBg} rounded-modern flex items-center justify-center shadow-glow`}
                    >
                      <stat.icon className="h-7 w-7 text-white" />
                    </motion.div>
                    <div>
                      <motion.div 
                        initial={{ scale: 0 }}
                        animate={{ scale: 1 }}
                        transition={{ delay: 0.7 + index * 0.1, type: "spring" }}
                        className="text-3xl lg:text-4xl font-bold"
                      >
                        {stat.value}
                      </motion.div>
                      <div className="text-white/90 text-sm font-medium">{stat.label}</div>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </motion.div>

        {/* Search and Filters */}
        <motion.div 
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6 }}
          className="bg-white/95 backdrop-blur-xl rounded-modern-xl shadow-vibrant border border-medical-100 p-6"
        >
          <div className="space-y-6">
            {/* Search Bar */}
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                <MagnifyingGlassIcon className="h-5 w-5 text-medical-400" />
              </div>
              <input
                type="text"
                placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£... üîç"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full pl-12 pr-16 py-4 border border-medical-200 rounded-modern-lg focus:border-medical-500 focus:ring-2 focus:ring-medical-100 transition-all duration-300 text-gray-900 placeholder-medical-400 bg-gradient-to-r from-white to-medical-50/30"
              />
              
              <motion.button
                whileTap={{ scale: 0.95 }}
                whileHover={{ scale: 1.05 }}
                onClick={() => setShowFilters(!showFilters)}
                className={`absolute inset-y-0 right-0 pr-4 flex items-center transition-all duration-300 ${
                  showFilters 
                    ? 'text-medical-600 bg-medical-100 rounded-r-modern-lg' 
                    : 'text-medical-400 hover:text-medical-600'
                }`}
              >
                <motion.div
                  animate={{ rotate: showFilters ? 180 : 0 }}
                  transition={{ duration: 0.3 }}
                >
                  <AdjustmentsHorizontalIcon className="h-5 w-5" />
                </motion.div>
              </motion.button>
            </div>

            {/* Category Filter */}
            <div className="flex space-x-3 overflow-x-auto pb-2">
              {modernCategories.map((category, index) => (
                <motion.button
                  key={category.key}
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ delay: 0.1 * index }}
                  whileHover={{ scale: 1.05, y: -2 }}
                  whileTap={{ scale: 0.95 }}
                  onClick={() => setSelectedCategory(category.key)}
                  className={`
                    flex items-center space-x-3 px-6 py-3 rounded-modern-lg text-sm font-semibold transition-all duration-300 whitespace-nowrap border
                    ${selectedCategory === category.key
                      ? `bg-gradient-to-r ${category.gradient} text-white shadow-vibrant border-transparent`
                      : `bg-gradient-to-r ${category.bgGradient} text-medical-700 hover:shadow-colorful border-medical-200 hover:border-medical-300`
                    }
                  `}
                >
                  <span className="text-lg">{category.icon}</span>
                  <span>{category.name}</span>
                  {selectedCategory === category.key && (
                    <motion.div
                      initial={{ scale: 0 }}
                      animate={{ scale: 1 }}
                      className="w-2 h-2 bg-white rounded-full"
                    />
                  )}
                </motion.button>
              ))}
            </div>

            {/* Advanced Filters */}
            <AnimatePresence>
              {showFilters && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  transition={{ duration: 0.4, ease: "easeOut" }}
                  className="border-t border-medical-200 pt-6 space-y-4"
                >
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                      <label className="block text-sm font-semibold text-medical-700 mb-3 flex items-center">
                        <ChartBarIcon className="h-4 w-4 mr-2" />
                        ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°
                      </label>
                      <select
                        value={sortBy}
                        onChange={(e) => setSortBy(e.target.value as any)}
                        className="w-full p-4 border border-medical-200 rounded-modern-lg focus:border-medical-500 focus:ring-2 focus:ring-medical-100 transition-all duration-300 bg-gradient-to-r from-white to-medical-50/30"
                      >
                        <option value="name">‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå (A-Z)</option>
                        <option value="rating">‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</option>
                        <option value="popular">üî• ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°</option>
                      </select>
                    </div>
                    
                    <div>
                      <label className="block text-sm font-semibold text-medical-700 mb-3 flex items-center">
                        <FireIcon className="h-4 w-4 mr-2" />
                        ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                      </label>
                      <select className="w-full p-4 border border-medical-200 rounded-modern-lg focus:border-medical-500 focus:ring-2 focus:ring-medical-100 transition-all duration-300 bg-gradient-to-r from-white to-medical-50/30">
                        <option value="all">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
                        <option value="available">‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
                        <option value="in_use">‚è∞ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
                      </select>
                    </div>
                    
                    <div>
                      <label className="block text-sm font-semibold text-medical-700 mb-3 flex items-center">
                        <BoltIcon className="h-4 w-4 mr-2" />
                        ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°
                      </label>
                      <select className="w-full p-4 border border-medical-200 rounded-modern-lg focus:border-medical-500 focus:ring-2 focus:ring-medical-100 transition-all duration-300 bg-gradient-to-r from-white to-medical-50/30">
                        <option value="all">‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</option>
                        <option value="1-3">‚ö° 1-3 ‡∏ß‡∏±‡∏ô</option>
                        <option value="4-7">üìÖ 4-7 ‡∏ß‡∏±‡∏ô</option>
                        <option value="7+">üìÜ ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 7 ‡∏ß‡∏±‡∏ô</option>
                      </select>
                    </div>
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        </motion.div>

        {/* Equipment Grid */}
        <div className="space-y-6">
          <div className="flex items-center justify-between">
            <motion.h3 
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              className="text-xl lg:text-2xl font-bold text-medical-800 flex items-center space-x-3"
            >
              <div className="w-8 h-8 bg-gradient-medical rounded-modern flex items-center justify-center">
                <HeartIcon className="h-5 w-5 text-white" />
              </div>
              <span>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå ({filteredEquipment.length})</span>
            </motion.h3>
            
            <div className="hidden md:flex items-center space-x-6 text-sm font-medium">
              <motion.span 
                whileHover={{ scale: 1.05 }}
                className="flex items-center space-x-2 bg-gradient-to-r from-success-50 to-medical-100 px-4 py-2 rounded-modern border border-success-200"
              >
                <div className="w-3 h-3 bg-success-500 rounded-full shadow-glow-sm"></div>
                <span className="text-success-700">‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ({availableCount})</span>
              </motion.span>
              <motion.span 
                whileHover={{ scale: 1.05 }}
                className="flex items-center space-x-2 bg-gradient-to-r from-warning-50 to-vibrant-amber/20 px-4 py-2 rounded-modern border border-warning-200"
              >
                <div className="w-3 h-3 bg-warning-500 rounded-full shadow-glow-sm"></div>
                <span className="text-warning-700">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ({inUseCount})</span>
              </motion.span>
            </div>
          </div>
          
          {filteredEquipment.length === 0 ? (
            <motion.div 
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              className="text-center py-20 bg-gradient-to-br from-white to-medical-50 rounded-modern-xl shadow-vibrant border border-medical-100"
            >
              <motion.div 
                animate={{ rotate: [0, 10, -10, 0] }}
                transition={{ duration: 2, repeat: Infinity }}
                className="text-8xl mb-6"
              >
                üîç
              </motion.div>
              <h4 className="text-2xl font-bold text-medical-800 mb-4">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</h4>
              <p className="text-medical-600 mb-8 text-lg">‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>
              <motion.button
                whileHover={{ scale: 1.05, y: -2 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => {
                  setSearchTerm('')
                  setSelectedCategory('all')
                }}
                className="px-8 py-4 bg-gradient-medical text-white font-bold rounded-modern-lg shadow-vibrant hover:shadow-glow-lg transition-all duration-300 flex items-center space-x-2 mx-auto"
              >
                <SparklesIcon className="h-5 w-5" />
                <span>‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</span>
              </motion.button>
            </motion.div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredEquipment.map((item, index) => (
                <motion.div
                  key={item.equipment_id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1, duration: 0.5 }}
                >
                  <EquipmentCard 
                    equipment={item}
                    onBook={handleBookEquipment}
                  />
                </motion.div>
              ))}
            </div>
          )}
        </div>

        {/* Quick Actions */}
        <motion.div 
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.8 }}
          className="bg-gradient-to-br from-medical-50 via-white to-vibrant-blue/5 rounded-modern-xl p-8 border border-medical-100 shadow-vibrant"
        >
          <motion.h4 
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            className="text-xl font-bold text-medical-800 mb-6 flex items-center space-x-3"
          >
            <motion.div
              animate={{ rotate: [0, 360] }}
              transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
              className="w-8 h-8 bg-gradient-medical rounded-modern flex items-center justify-center shadow-glow-sm"
            >
              <HeartIcon className="h-5 w-5 text-white" />
            </motion.div>
            <span>‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πà‡∏ß‡∏ô - RSU Medical Clinic</span>
            <motion.div
              animate={{ scale: [1, 1.2, 1] }}
              transition={{ duration: 2, repeat: Infinity }}
              className="w-2 h-2 bg-vibrant-amber rounded-full"
            ></motion.div>
          </motion.h4>
          
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
            {[
              { name: '‡∏¢‡∏∑‡∏°‡∏î‡πà‡∏ß‡∏ô', icon: '‚ö°', gradient: 'from-warning-400 to-vibrant-amber', bg: 'from-warning-50 to-vibrant-amber/20' },
              { name: '‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô', icon: 'üì¶', gradient: 'from-success-400 to-medical-500', bg: 'from-success-50 to-medical-100' },
              { name: '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥', icon: 'üìã', gradient: 'from-info-400 to-vibrant-cyan', bg: 'from-info-50 to-vibrant-cyan/20' },
              { name: '‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤', icon: 'üîß', gradient: 'from-error-400 to-vibrant-rose', bg: 'from-error-50 to-vibrant-rose/20' }
            ].map((action, index) => (
              <motion.button
                key={action.name}
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.9 + index * 0.1, type: "spring" }}
                whileHover={{ scale: 1.05, y: -4 }}
                whileTap={{ scale: 0.95 }}
                className={`bg-gradient-to-br ${action.bg} rounded-modern-xl p-6 shadow-colorful hover:shadow-vibrant transition-all duration-300 border border-medical-100 group`}
              >
                <motion.div 
                  whileHover={{ rotate: 360 }}
                  transition={{ duration: 0.6 }}
                  className={`w-16 h-16 bg-gradient-to-r ${action.gradient} rounded-modern-lg flex items-center justify-center mx-auto mb-4 shadow-glow group-hover:shadow-glow-lg`}
                >
                  <span className="text-2xl">{action.icon}</span>
                </motion.div>
                <div className="text-base font-bold text-medical-800">{action.name}</div>
              </motion.button>
            ))}
          </div>
        </motion.div>
      </div>
    </Layout>
  )
}